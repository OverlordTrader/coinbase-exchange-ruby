=begin
#Coinbase Exchange REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'cgi'

module CoinbasePro
  class CurrenciesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get all known currencies
    # Gets a list of all known currencies.  Note: Not all currencies may be currently in use for trading.
    # @param [Hash] opts the optional parameters
    # @return [Array<ApiCurrency>]
    def exchange_restapi_get_currencies(opts = {})
      data, _status_code, _headers = exchange_restapi_get_currencies_with_http_info(opts)
      data
    end

    # Get all known currencies
    # Gets a list of all known currencies.  Note: Not all currencies may be currently in use for trading.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<ApiCurrency>, Integer, Hash)>] Array<ApiCurrency> data, response status code and response headers
    def exchange_restapi_get_currencies_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CurrenciesApi.exchange_restapi_get_currencies ...'
      end
      # resource path
      local_var_path = '/currencies'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Array<ApiCurrency>'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"CurrenciesApi.exchange_restapi_get_currencies",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CurrenciesApi#exchange_restapi_get_currencies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a currency
    # Gets a single currency by id.
    # @param currency_id [String] 
    # @param [Hash] opts the optional parameters
    # @return [ApiCurrency]
    def exchange_restapi_get_currency(currency_id, opts = {})
      data, _status_code, _headers = exchange_restapi_get_currency_with_http_info(currency_id, opts)
      data
    end

    # Get a currency
    # Gets a single currency by id.
    # @param currency_id [String] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApiCurrency, Integer, Hash)>] ApiCurrency data, response status code and response headers
    def exchange_restapi_get_currency_with_http_info(currency_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CurrenciesApi.exchange_restapi_get_currency ...'
      end
      # verify the required parameter 'currency_id' is set
      if @api_client.config.client_side_validation && currency_id.nil?
        fail ArgumentError, "Missing the required parameter 'currency_id' when calling CurrenciesApi.exchange_restapi_get_currency"
      end
      # resource path
      local_var_path = '/currencies/{currency_id}'.sub('{' + 'currency_id' + '}', CGI.escape(currency_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiCurrency'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"CurrenciesApi.exchange_restapi_get_currency",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CurrenciesApi#exchange_restapi_get_currency\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
