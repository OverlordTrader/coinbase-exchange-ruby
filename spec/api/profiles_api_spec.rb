=begin
#Coinbase Exchange REST API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for CoinbasePro::ProfilesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProfilesApi' do
  before do
    # run before each test
    @api_instance = CoinbasePro::ProfilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProfilesApi' do
    it 'should create an instance of ProfilesApi' do
      expect(@api_instance).to be_instance_of(CoinbasePro::ProfilesApi)
    end
  end

  # unit tests for exchange_restapi_get_profile
  # Get profile by id
  # Information for a single profile. Use this endpoint when you know the profile_id.
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :active 
  # @return [ApiProfile]
  describe 'exchange_restapi_get_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_restapi_get_profiles
  # Get profiles
  # Gets a list of all of the current user&#39;s profiles.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :active 
  # @return [Array<ApiProfile>]
  describe 'exchange_restapi_get_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_restapi_post_profile
  # Create a profile
  # Create a new profile. Will fail if no name is provided or if user already has 10 profiles.
  # @param api_post_profile_request 
  # @param [Hash] opts the optional parameters
  # @return [ApiProfile]
  describe 'exchange_restapi_post_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_restapi_post_profile_transfer
  # Transfer funds between profiles
  # Transfer an amount of currency from one profile to another.
  # @param api_post_profile_transfer_request 
  # @param [Hash] opts the optional parameters
  # @return [AnyType]
  describe 'exchange_restapi_post_profile_transfer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_restapi_put_profile
  # Rename a profile
  # Rename a profile. Names &#39;default&#39; and &#39;margin&#39; are reserved.
  # @param profile_id 
  # @param api_put_profile_request 
  # @param [Hash] opts the optional parameters
  # @return [ApiProfile]
  describe 'exchange_restapi_put_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_restapi_put_profile_deactivate
  # Delete a profile
  # Deletes the profile specified by &#x60;profile_id&#x60; and transfers all funds to the profile specified by &#x60;to&#x60;. Fails if there are any open orders on the profile to be deleted.
  # @param profile_id 
  # @param api_put_profile_deactivate_request 
  # @param [Hash] opts the optional parameters
  # @return [AnyType]
  describe 'exchange_restapi_put_profile_deactivate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
